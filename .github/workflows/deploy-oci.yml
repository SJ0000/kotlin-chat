name: deploy OCI

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./
      APPLICATION: ${{ secrets.APPLICATION }}
      APPLICATION_TEST: ${{ secrets.APPLICATION_TEST }}
    
    steps:
      # repository code pull
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Copy application.yml
        run: |
          mkdir -p ./src/main/resources
          mkdir -p ./src/test/resources
          touch ./src/main/resources/application.yml
          echo "${{env.APPLICATION}}" > ./src/main/resources/application.yml
          touch ./src/test/resources/application.yml
          echo "${{env.APPLICATION_TEST}}" > ./src/test/resources/application.yml

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose        
      
      - name: Execute Gradle Build
        run: ./gradlew build

      - name: generate test fail report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: ./build/reports

      - name: generate artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./build/libs

  artifacts-upload:
    runs-on: ubuntu-latest
    needs: build
    env:
      working-directory: ./
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      OCI_CLI_BUCKET_NAMESPACE: ${{ secrets.OCI_BUCKET_NAMESPACE }}

    steps:
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          path: build
          name: build

      - name: zip artifacts
        run: |
          mkdir -p /tmp
          zip -r /tmp/artifact.zip build

      - name: move to Object Storage
        uses: oracle-actions/run-oci-cli-command@v1.1.1
        with:
          command: |
            oci os object delete --bucket-name simple-messenger-bucket --name artifact.zip --force
            oci os object put --bucket-name simple-messenger-bucket --file /tmp/artifact.zip --namespace "${{ env.OCI_CLI_BUCKET_NAMESPACE }}"            

  run-on-oci-instance:
    runs-on: ubuntu-latest
    needs: artifacts-upload
    env:
      DEPLOY_DIR: ${{ secrets.OCI_INSTANCE_DEPLOY_DIR }}
    steps:
      - name: ssh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.OCI_INSTANCE_HOST }}
          username: ${{ secrets.OCI_INSTANCE_USERNAME }}
          key: ${{ secrets.OCI_INSTANCE_KEY }}
          script: |
            sh "${{ env.DEPLOY_DIR }}/deploy.sh"